[{"F:\\TO STUDY\\WEB DEVELOPER\\WEB DEVELOPER BOOTCAMP\\HTML PROJECTS\\REFRESHER UDEMY\\27 ALUVS\\chat-app-react\\src\\index.js":"1","F:\\TO STUDY\\WEB DEVELOPER\\WEB DEVELOPER BOOTCAMP\\HTML PROJECTS\\REFRESHER UDEMY\\27 ALUVS\\chat-app-react\\src\\reportWebVitals.js":"2","F:\\TO STUDY\\WEB DEVELOPER\\WEB DEVELOPER BOOTCAMP\\HTML PROJECTS\\REFRESHER UDEMY\\27 ALUVS\\chat-app-react\\src\\App.js":"3","F:\\TO STUDY\\WEB DEVELOPER\\WEB DEVELOPER BOOTCAMP\\HTML PROJECTS\\REFRESHER UDEMY\\27 ALUVS\\chat-app-react\\src\\components\\Header.jsx":"4","F:\\TO STUDY\\WEB DEVELOPER\\WEB DEVELOPER BOOTCAMP\\HTML PROJECTS\\REFRESHER UDEMY\\27 ALUVS\\chat-app-react\\src\\components\\LiveVisitors.jsx":"5"},{"size":566,"mtime":1611628787080,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":538,"mtime":1611628791241,"results":"9","hashOfConfig":"7"},{"size":758,"mtime":1611626869112,"results":"10","hashOfConfig":"7"},{"size":2613,"mtime":1611628329247,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5z5rgx",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},"F:\\TO STUDY\\WEB DEVELOPER\\WEB DEVELOPER BOOTCAMP\\HTML PROJECTS\\REFRESHER UDEMY\\27 ALUVS\\chat-app-react\\src\\index.js",[],"F:\\TO STUDY\\WEB DEVELOPER\\WEB DEVELOPER BOOTCAMP\\HTML PROJECTS\\REFRESHER UDEMY\\27 ALUVS\\chat-app-react\\src\\reportWebVitals.js",[],["24","25"],"F:\\TO STUDY\\WEB DEVELOPER\\WEB DEVELOPER BOOTCAMP\\HTML PROJECTS\\REFRESHER UDEMY\\27 ALUVS\\chat-app-react\\src\\App.js",[],"F:\\TO STUDY\\WEB DEVELOPER\\WEB DEVELOPER BOOTCAMP\\HTML PROJECTS\\REFRESHER UDEMY\\27 ALUVS\\chat-app-react\\src\\components\\Header.jsx",[],"F:\\TO STUDY\\WEB DEVELOPER\\WEB DEVELOPER BOOTCAMP\\HTML PROJECTS\\REFRESHER UDEMY\\27 ALUVS\\chat-app-react\\src\\components\\LiveVisitors.jsx",["26","27","28"],"import React, { Component } from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport openSocket from \"socket.io-client\";\r\nimport { Link, BrowserRouter  } from 'react-router-dom'\r\n// const socket = openSocket(\"http://localhost:6600\")\r\nconst io = require(\"socket.io-client\");\r\n\r\nconst socket = io(\"http://localhost:6600\", {\r\n  withCredentials: true,\r\n  extraHeaders: {\r\n    \"my-custom-header\": \"textsadasd/plain\"\r\n  }\r\n});\r\n\r\nclass LiveVisitors extends Component {\r\n\r\n  state = {\r\n    visitors: []\r\n  }\r\n\r\n  componentWillMount() {\r\n    axios.get('http://geoplugin.net/json.gp').then(res => {\r\n      const {\r\n        geoplugin_request,\r\n        geoplugin_countryCode,\r\n        geoplugin_city,\r\n        geoplugin_region,\r\n        geoplugin_countryName\r\n      } = res.data;\r\n      const clientdata = {\r\n        ip: geoplugin_request,\r\n        countrycode: geoplugin_countryCode,\r\n        city: geoplugin_city,\r\n        state: geoplugin_region,\r\n        country: geoplugin_countryName\r\n      } \r\n\r\n      socket.emit(\"SET_CLIENT_DATA\", clientdata);\r\n\r\n      socket.on(\"ALL_CONNECTED_CLIENTS\", (allclients) => {\r\n        this.setState({\r\n          visitors: allclients\r\n        })          \r\n      })       \r\n      /* here the client receives all custom client data that we kept serverside for each connected client */ \r\n      /* do some more code here */\r\n      \r\n      // });\r\n      // socket.emit(\"new_visitor\", visitor);\r\n\r\n      // socket.on(\"visitors\", visitors => {\r\n      //   this.setState({\r\n      //     visitors: visitors\r\n      //   })          \r\n      // })\r\n    });\r\n  }\r\n\r\n  getCountryFlag = countrycode => `http://www.countryflags.io/${countrycode}/flat/64.png`\r\n\r\n  renderTableBody = () => {\r\n    const { visitors } = this.state;\r\n    return visitors.map((v, index) => {\r\n      return (\r\n        <tr key={index+1}>\r\n          <th>{index}</th>\r\n          <td>{v.ip}</td>\r\n          <td><img alt=\"flag\" src={this.getCountryFlag(v.countrycode)}/></td>\r\n          <td>{v.city}</td>\r\n          <td>{v.state}</td>\r\n          <td>{v.country}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h2>Live Visitors</h2>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>IP</th>\r\n              <th>Flag</th>\r\n              <th>City</th>\r\n              <th>State</th>\r\n              <th>Country</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.renderTableBody()}</tbody>\r\n        </Table>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LiveVisitors;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":4,"column":8,"nodeType":"35","messageId":"36","endLine":4,"endColumn":18},{"ruleId":"33","severity":1,"message":"37","line":5,"column":10,"nodeType":"35","messageId":"36","endLine":5,"endColumn":14},{"ruleId":"33","severity":1,"message":"38","line":5,"column":16,"nodeType":"35","messageId":"36","endLine":5,"endColumn":29},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'openSocket' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'BrowserRouter' is defined but never used.","no-global-assign","no-unsafe-negation"]